lookup = {
    64: [('2', [4, 4, 4, 2, 2, 2, 2, 2, 2, 8, 2, 4, 5, 4, 4, 5, 5, 3]),
         ('C', [5, 4, 3, 2, 2, 2, 2, 3, 4, 5, 6, 8, 4, 2, 2, 2, 4, 4])],
    84: [('A', [2, 4, 4, 4, 4, 4, 8, 4, 4, 4, 7, 8, 3, 3, 3, 3, 8, 7])],
    68: [('E', [7, 2, 2, 2, 6, 2, 2, 2, 2, 7, 10, 10, 3, 3, 3, 3, 2, 0])],
    70: [('4', [2, 3, 4, 4, 4, 4, 8, 2, 2, 2, 2, 3, 3, 3, 3, 10, 10, 1])],
    72: [('V', [4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 3, 6, 5, 4, 4, 5, 6, 3]),
         ('X', [4, 4, 4, 4, 2, 2, 4, 4, 4, 4, 4, 6, 4, 4, 4, 4, 6, 4]),
         ('S', [6, 4, 2, 2, 6, 2, 2, 2, 4, 6, 4, 7, 3, 3, 3, 3, 8, 5]),
         ('P', [7, 4, 4, 4, 7, 2, 2, 2, 2, 2, 10, 10, 2, 2, 2, 2, 5, 3]),
         ('0', [2, 4, 4, 4, 4, 4, 4, 4, 4, 2, 4, 6, 4, 4, 4, 4, 6, 4])],
    92: [('B', [6, 4, 4, 4, 6, 4, 4, 4, 4, 6, 10, 10, 3, 3, 3, 7, 7, 3])],
    74: [('G', [5, 4, 2, 2, 2, 5, 4, 4, 4, 5, 6, 8, 4, 2, 2, 3, 7, 5]),
         ('5', [7, 2, 2, 5, 5, 2, 2, 4, 4, 4, 6, 7, 4, 3, 3, 5, 6, 3])],
    78: [('6', [4, 4, 3, 2, 5, 5, 4, 4, 4, 4, 6, 8, 5, 3, 3, 6, 6, 2]),
         ('9', [4, 4, 4, 4, 5, 5, 2, 3, 4, 4, 2, 6, 6, 3, 3, 5, 8, 6])],
    80: [('U', [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 9, 2, 1, 1, 2, 9, 8]),
         ('O', [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 6, 8, 4, 2, 2, 4, 8, 6]),
         ('8', [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 7, 7, 3, 3, 7, 7, 3]),
         ('K', [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 10, 10, 2, 4, 4, 4, 4, 2])],
    88: [('D', [6, 4, 4, 4, 4, 4, 4, 4, 4, 6, 10, 10, 2, 2, 2, 4, 8, 6]),
         ('H', [4, 4, 4, 4, 8, 4, 4, 4, 4, 4, 10, 10, 1, 1, 1, 1, 10, 10])],
    50: [('L', [2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 10, 10, 1, 1, 1, 1, 1, 0])],
    52: [('7', [8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 4, 3, 3, 3, 3, 4, 3]),
         ('J', [4, 2, 2, 2, 2, 2, 2, 3, 4, 3, 0, 2, 2, 2, 3, 9, 8, 0]),
         ('T', [8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 10, 10, 1, 1, 1])],
    94: [('R', [7, 4, 4, 4, 7, 5, 4, 4, 4, 4, 10, 10, 3, 3, 4, 4, 8, 5])],
    54: [('1', [2, 3, 4, 2, 2, 2, 2, 2, 2, 6, 0, 2, 3, 10, 10, 1, 1, 0])],
    56: [('Y', [4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 3, 2, 7, 7, 2, 3, 2]),
         ('I', [6, 2, 2, 2, 2, 2, 2, 2, 2, 6, 0, 2, 2, 10, 10, 2, 2, 0])],
    104: [('M', [4, 6, 8, 6, 6, 6, 4, 4, 4, 4, 10, 10, 2, 4, 4, 2, 10, 10]),
          ('W', [4, 4, 4, 4, 6, 6, 6, 8, 6, 4, 10, 10, 2, 4, 4, 2, 10, 10])],
    90: [('Q', [4, 4, 4, 4, 4, 4, 6, 6, 4, 5, 6, 8, 4, 3, 4, 5, 8, 7])],
    60: [('Z', [7, 2, 2, 2, 2, 2, 2, 2, 2, 7, 4, 5, 4, 4, 4, 5, 4, 0]),
         ('F', [8, 2, 2, 2, 6, 2, 2, 2, 2, 2, 10, 10, 2, 2, 2, 2, 1, 1])],
    106: [('N', [4, 5, 6, 6, 6, 6, 6, 5, 5, 4, 10, 10, 3, 4, 3, 3, 10, 10])],
    62: [('3', [5, 4, 2, 2, 3, 2, 2, 2, 4, 5, 2, 4, 2, 3, 3, 7, 7, 3])]}

h, w = list(map(int, input().strip().split()))
l = [[], [], [], [], []]

for i in range(11):
    _discard_i = input()
for j in range(11, 21):
    row = [sum([int(val) for val in pxl.split(",")]) < 255 for pxl in input().strip().split(" ")]
    l[0] += [row[5:13]]
    l[1] += [row[14:22]]
    l[2] += [row[23:31]]
    l[3] += [row[32:40]]
    l[4] += [row[41:49]]
for k in range(21, h):
    _discard_k = input()

u = [[], [], [], [], []]
for ui in range(5):
    u[ui] = [sum(r) for r in l[ui]] + [sum(r) for r in list(zip(*l[ui]))]

out = ""
su = [[], [], [], [], []]
for si in range(5):
    su[si] = sum(u[si])
    if su[si] in lookup:
        if len(lookup[su[si]]) > 1:
            for n in range(len(lookup[su[si]])):
                if u[si] == lookup[su[si]][n][1]:
                    out += lookup[su[si]][n][0]
                    break
        else:
            out += lookup[su[si]][0][0]

print(out)
